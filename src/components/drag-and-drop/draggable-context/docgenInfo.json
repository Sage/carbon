{
  "src/components/drag-and-drop/draggable-context/draggable-context.js": [
    {
      "description": "",
      "displayName": "DraggableContext",
      "methods": [
        {
          "name": "checkAutoScroll",
          "docblock": "A callback for when auto scroll is triggered\n\n@method autoScroll\n@param {Object} ev event\n@return {void}",
          "modifiers": [],
          "params": [
            {
              "name": "event"
            }
          ],
          "returns": {
            "description": null,
            "type": {
              "name": "void"
            }
          },
          "description": "A callback for when auto scroll is triggered"
        },
        {
          "name": "startScrolling",
          "docblock": null,
          "modifiers": [],
          "params": [],
          "returns": null
        },
        {
          "name": "tick",
          "docblock": null,
          "modifiers": [],
          "params": [],
          "returns": null
        },
        {
          "name": "handleDrag",
          "docblock": "A callback for when a drag is triggered.\n\nStores the hoverIndex in state as activeIndex,\nand calls this.props.onDrag only if originalIndex\nis not undefined.\n\n@method handleDrag\n@param {Number} originalIndex (the active item's original index)\n@param {Number} hoverIndex (the active item's new index\n@return {Void}",
          "modifiers": [],
          "params": [
            {
              "name": "originalIndex",
              "description": "(the active item's original index)",
              "type": {
                "name": "Number"
              },
              "optional": false
            },
            {
              "name": "hoverIndex",
              "description": "(the active item's new index",
              "type": {
                "name": "Number"
              },
              "optional": false
            }
          ],
          "returns": {
            "description": null,
            "type": {
              "name": "Void"
            }
          },
          "description": "A callback for when a drag is triggered.\n\nStores the hoverIndex in state as activeIndex,\nand calls this.props.onDrag only if originalIndex\nis not undefined."
        },
        {
          "name": "handleBeginDrag",
          "docblock": "A callback for when dragging begins.\n\nSets state of dragging to true which\nwill trigger the start of auto scroll\nif it is enabled.\n\n@method handleBeginDrag\n@param {Object} props\n@return {Void}",
          "modifiers": [],
          "params": [
            {
              "name": "props",
              "description": null,
              "type": {
                "name": "Object"
              },
              "optional": false
            }
          ],
          "returns": {
            "description": null,
            "type": {
              "name": "Void"
            }
          },
          "description": "A callback for when dragging begins.\n\nSets state of dragging to true which\nwill trigger the start of auto scroll\nif it is enabled."
        },
        {
          "name": "handleEndDrag",
          "docblock": "A callback for when a drag ends triggered.\n\n@method handleEndDrag\n@return {Void}",
          "modifiers": [],
          "params": [],
          "returns": {
            "description": null,
            "type": {
              "name": "Void"
            }
          },
          "description": "A callback for when a drag ends triggered."
        }
      ],
      "props": {
        "children": {
          "type": {
            "name": "node"
          },
          "required": true,
          "description": "The element(s) where you want to apply drag\nand drop functionality"
        },
        "customDragLayer": {
          "type": {
            "name": "node"
          },
          "required": false,
          "description": "Optional CustomDragLayer to use for the ghost row when dragging & dropping",
          "defaultValue": {
            "value": "<CustomDragLayer />",
            "computed": false
          }
        },
        "onDrag": {
          "type": {
            "name": "func"
          },
          "required": true,
          "description": "Callback function for when an item has been dragged\ne.g. to update data in a store"
        },
        "autoScroll": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "description": "Prop to enable/disable auto scroll on drag",
          "defaultValue": {
            "value": "false",
            "computed": false
          }
        }
      },
      "childContext": {
        "dragAndDropActiveIndex": {
          "type": {
            "name": "number"
          },
          "required": false
        },
        "dragAndDropBeginDrag": {
          "type": {
            "name": "func"
          },
          "required": false
        },
        "dragAndDropEndDrag": {
          "type": {
            "name": "func"
          },
          "required": false
        },
        "dragAndDropHover": {
          "type": {
            "name": "func"
          },
          "required": false
        },
        "dragAndDropOnDrag": {
          "type": {
            "name": "func"
          },
          "required": false
        }
      }
    }
  ]
}