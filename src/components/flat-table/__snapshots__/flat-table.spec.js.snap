// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`FlatTable when rendered with proper table data should have expected structure and styles 1`] = `
.c9 {
  background-color: transparent;
  border-width: 0;
  box-sizing: border-box;
  font-weight: 700;
  left: auto;
  text-align: left;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  vertical-align: middle;
  white-space: nowrap;
  word-break: keep-all;
  padding: 0;
}

.c9:first-child {
  padding-left: 1px;
}

.c9.c9.c9 > div {
  box-sizing: border-box;
}

.c11 {
  background-color: var(--colorsUtilityYang100);
  border-width: 0;
  border-bottom: 1px solid var(--colorsUtilityMajor100);
  text-align: left;
  vertical-align: middle;
  padding: 0;
}

.c11.c11.c11.c11 > div {
  box-sizing: border-box;
}

.c11:first-of-type {
  border-left: 1px solid var(--colorsUtilityMajor100);
}

.c11:last-of-type {
  border-right: 1px solid var(--colorsUtilityMajor100);
}

.c12 {
  background-color: var(--colorsUtilityYang100);
  border-width: 0;
  border-bottom: 1px solid var(--colorsUtilityMajor100);
  text-align: left;
  vertical-align: middle;
  padding: 0;
}

.c12.c12.c12.c12 > div {
  box-sizing: border-box;
}

.c12:first-of-type {
  border-left: 1px solid var(--colorsUtilityMajor100);
}

.c12:last-of-type {
  border-right: 1px solid var(--colorsUtilityMajor100);
}

.c12:first-of-type + .c10 {
  border-left: 1px solid var(--colorsUtilityMajor100);
}

.c7 {
  background-color: var(--colorsUtilityYang100);
  border: 1px solid var(--colorsUtilityMajor100);
  border-top: none;
  box-sizing: border-box;
  left: 0;
  font-weight: normal;
  position: -webkit-sticky;
  position: sticky;
  text-align: left;
  top: auto;
  vertical-align: middle;
  padding: 0;
  z-index: 1000;
}

.c7.c7.c7.c7 {
  left: 0px;
}

.c7.c7.c7.c7 > div {
  box-sizing: border-box;
  padding-top: 10px;
  padding-bottom: 10px;
  padding-left: var(--spacing300);
  padding-right: var(--spacing300);
}

.c5 {
  border-collapse: separate;
  border-radius: 0px;
  border-spacing: 0;
  min-width: 100%;
  table-layout: fixed;
  width: auto;
}

.c5 [data-component="icon"]:not([color]) {
  color: var(--colorsActionMinor500);
}

.c5 .c6 + td {
  border-left: none;
}

.c5 .c6:nth-child(1) {
  border-right: 2px solid var(--colorsUtilityMajor100);
}

.c5 .c8 {
  border-bottom: 1px solid var(--colorsUtilityMajor400);
}

.c5 .c8:first-child {
  border-left: 1px solid var(--colorsUtilityMajor400);
}

.c3.c3.c3 .c13 {
  border-left: none;
  border-right: none;
}

.c3.c3.c3 .c6,
.c3.c3.c3 .c13 {
  font-weight: 700;
}

.c1 {
  border-collapse: separate;
  border-radius: 0px;
  border-spacing: 0;
  width: 100%;
}

.c1 .c4 {
  height: 40px;
}

.c1 .c10 > div,
.c1 .c8 > div,
.c1 .c6 > div,
.c1 .c13 > div {
  font-size: 14px;
  padding-left: 16px;
  padding-right: 16px;
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  min-width: -webkit-fit-content;
  min-width: -moz-fit-content;
  min-width: fit-content;
  box-sizing: border-box;
  box-shadow: inset 0px 0px 0px 1px var(--colorsUtilityMajor100);
}

.c0:focus {
  outline: 2px solid var(--colorsSemanticFocus500);
}

.c0:focus:not(:focus-visible) {
  outline: none;
}

.c0:focus:focus-visible {
  outline: 2px solid var(--colorsSemanticFocus500);
}

.c0 .c2 .c13,
.c0 .c8,
.c0 .c2 {
  background-color: var(--colorsUtilityMajor400);
  border-right: 1px solid var(--colorsUtilityMajor300);
  color: var(--colorsUtilityYang100);
  border-bottom-color: var(--colorsUtilityMajor300);
}

.c0 .c2 .c6 {
  background-color: var(--colorsUtilityMajor400);
  color: var(--colorsUtilityYang100);
  border-bottom-color: var(--colorsUtilityMajor300);
  border-right-color: var(--colorsUtilityMajor300);
  border-left-color: var(--colorsUtilityMajor300);
}

.c0 .c2 .c6,
.c0 .c8.isSticky,
.c0 .c2 .c13.isSticky {
  z-index: 1005;
}

.c0 thead .c8.isSticky,
.c0 .c13.isSticky {
  border-right: none;
}

.c0 .c8,
.c0 .c13 {
  z-index: 1003;
}

.c0 tbody .c6,
.c0 .c10.isSticky,
.c0 tbody .c13.isSticky {
  z-index: 1000;
}

<div
  className="c0"
  data-component="flat-table-wrapper"
  display="flex"
  role="region"
  tabIndex="0"
>
  <div
    className=""
  >
    <table
      className="c1"
      data-component="flat-table"
      size="medium"
    >
      <thead
        className="c2 c3"
      >
        <tr
          className="c4 c5"
          data-element="flat-table-row"
          onClick={[Function]}
          size="medium"
        >
          <th
            className="c6 c7"
            data-element="flat-table-row-header"
            onClick={[Function]}
            onKeyDown={[Function]}
          >
            <div
              className=""
            >
              row header
            </div>
          </th>
          <th
            className="c8 c9"
            data-element="flat-table-header"
          >
            <div>
              header1
            </div>
          </th>
          <th
            className="c8 c9"
            data-element="flat-table-header"
          >
            <div>
              header2
            </div>
          </th>
          <th
            className="c8 c9"
            data-element="flat-table-header"
          >
            <div>
              header3
            </div>
          </th>
        </tr>
      </thead>
      <tbody>
        <tr
          className="c4 c5"
          data-element="flat-table-row"
          onClick={[Function]}
          size="medium"
        >
          <th
            className="c6 c7"
            data-element="flat-table-row-header"
            onClick={[Function]}
            onKeyDown={[Function]}
          >
            <div
              className=""
            >
              row header
            </div>
          </th>
          <td
            className="c10 c11"
            data-element="flat-table-cell"
          >
            <div
              className=""
            >
              cell1
            </div>
          </td>
          <td
            className="c10 c11"
            data-element="flat-table-cell"
          >
            <div
              className=""
            >
              cell2
            </div>
          </td>
          <td
            className="c10 c12"
            data-element="flat-table-cell"
            rowSpan="2"
          >
            <div
              className=""
            >
              cell3
            </div>
          </td>
        </tr>
        <tr
          className="c4 c5"
          data-element="flat-table-row"
          onClick={[Function]}
          size="medium"
        >
          <th
            className="c6 c7"
            data-element="flat-table-row-header"
            onClick={[Function]}
            onKeyDown={[Function]}
          >
            <div
              className=""
            >
              row header
            </div>
          </th>
          <td
            className="c10 c11"
            colSpan="2"
            data-element="flat-table-cell"
          >
            <div
              className=""
            >
              cell1
            </div>
          </td>
        </tr>
      </tbody>
    </table>
  </div>
</div>
`;
