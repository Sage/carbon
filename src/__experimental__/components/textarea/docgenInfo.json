{
  "src/__experimental__/components/textarea/character-count/character-count.component.js": [
    {
      "description": "",
      "displayName": "CharacterCount",
      "methods": [],
      "props": {
        "value": {
          "type": {
            "name": "string"
          },
          "required": true,
          "description": ""
        },
        "limit": {
          "type": {
            "name": "string"
          },
          "required": true,
          "description": ""
        },
        "theme": {
          "type": {
            "name": "object"
          },
          "required": false,
          "description": "",
          "defaultValue": {
            "value": "baseTheme",
            "computed": true
          }
        }
      }
    }
  ],
  "src/__experimental__/components/textarea/character-count/classic-character-count.component.js": [
    {
      "description": "",
      "displayName": "ClassicCharacterCount",
      "methods": [],
      "props": {
        "value": {
          "type": {
            "name": "string"
          },
          "required": true,
          "description": ""
        },
        "limit": {
          "type": {
            "name": "string"
          },
          "required": true,
          "description": ""
        }
      }
    }
  ],
  "src/__experimental__/components/textarea/textarea-input.component.js": [
    {
      "description": "",
      "displayName": "TextareaInput",
      "methods": [],
      "props": {
        "maxLength": {
          "type": {
            "name": "string"
          },
          "required": false,
          "description": ""
        }
      }
    }
  ],
  "src/__experimental__/components/textarea/textarea.component.js": [
    {
      "description": "",
      "displayName": "Textarea",
      "methods": [
        {
          "name": "expandTextarea",
          "docblock": null,
          "modifiers": [],
          "params": [],
          "returns": null
        },
        {
          "name": "renderValidation",
          "docblock": null,
          "modifiers": [],
          "params": [],
          "returns": null
        },
        {
          "name": "overLimit",
          "docblock": null,
          "modifiers": [
            "get"
          ],
          "params": [],
          "returns": null
        },
        {
          "name": "characterCount",
          "docblock": null,
          "modifiers": [
            "get"
          ],
          "params": [],
          "returns": null
        },
        {
          "name": "inputRefCallback",
          "docblock": null,
          "modifiers": [],
          "params": [
            {
              "name": "inputRef",
              "type": null
            }
          ],
          "returns": null
        }
      ],
      "props": {
        "id": {
          "type": {
            "name": "string"
          },
          "required": false,
          "description": "id of the input"
        },
        "characterLimit": {
          "type": {
            "name": "string"
          },
          "required": false,
          "description": "Character limit of the textarea"
        },
        "children": {
          "type": {
            "name": "node"
          },
          "required": false,
          "description": "Type of the icon that will be rendered next to the input"
        },
        "cols": {
          "type": {
            "name": "number"
          },
          "required": false,
          "description": "The visible width of the text control, in average character widths"
        },
        "disabled": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "description": "Adds disabled property",
          "defaultValue": {
            "value": "false",
            "computed": false
          }
        },
        "enforceCharacterLimit": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "description": "Stop the user typing over the characterLimit",
          "defaultValue": {
            "value": "true",
            "computed": false
          }
        },
        "expandable": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "description": "Allows the Textareas Height to change based on user input",
          "defaultValue": {
            "value": "false",
            "computed": false
          }
        },
        "label": {
          "type": {
            "name": "string"
          },
          "required": false,
          "description": "The content of the label for the input"
        },
        "labelInline": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "description": "When true, label is placed in line with an input"
        },
        "labelSpacing": {
          "type": {
            "name": "enum",
            "value": [
              {
                "value": 1,
                "computed": "false"
              },
              {
                "value": 2,
                "computed": "false"
              }
            ]
          },
          "required": false,
          "description": "Spacing between label and a field for inline label, given number will be multiplied by base spacing unit (8)"
        },
        "name": {
          "type": {
            "name": "string"
          },
          "required": false,
          "description": "Name of the input"
        },
        "onChange": {
          "type": {
            "name": "func"
          },
          "required": false,
          "description": "Callback fired when the user types in the Textarea"
        },
        "placeholder": {
          "type": {
            "name": "string"
          },
          "required": false,
          "description": "Placeholder text for the component"
        },
        "readOnly": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "description": "Adds readOnly property",
          "defaultValue": {
            "value": "false",
            "computed": false
          }
        },
        "rows": {
          "type": {
            "name": "number"
          },
          "required": false,
          "description": "The number of visible text lines for the control"
        },
        "size": {
          "type": {
            "name": "enum",
            "computed": true,
            "value": "OptionsHelper.sizesRestricted"
          },
          "required": false,
          "description": "One of type of size to apply to the textarea"
        },
        "value": {
          "type": {
            "name": "string"
          },
          "required": false,
          "description": "The value of the Textarea"
        },
        "warnOverLimit": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "description": "Whether to display the character count message in red",
          "defaultValue": {
            "value": "false",
            "computed": false
          }
        },
        "error": {
          "type": {
            "name": "union",
            "value": [
              {
                "name": "bool"
              },
              {
                "name": "string"
              }
            ]
          },
          "required": false,
          "description": "Indicate that error has occurred\n  Pass string to display icon, tooltip and red border\n  Pass true boolean to only display red border"
        },
        "warning": {
          "type": {
            "name": "union",
            "value": [
              {
                "name": "bool"
              },
              {
                "name": "string"
              }
            ]
          },
          "required": false,
          "description": "Indicate that warning has occurred\n  Pass string to display icon, tooltip and orange border\n  Pass true boolean to only display orange border"
        },
        "info": {
          "type": {
            "name": "union",
            "value": [
              {
                "name": "bool"
              },
              {
                "name": "string"
              }
            ]
          },
          "required": false,
          "description": "Indicate additional information\n  Pass string to display icon, tooltip and blue border\n  Pass true boolean to only display blue border"
        },
        "validationOnLabel": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "description": "When true, validation icon will be placed on label instead of being placed on the input",
          "defaultValue": {
            "value": "false",
            "computed": false
          }
        },
        "inputIcon": {
          "type": {
            "name": "string"
          },
          "required": false,
          "description": "Icon to display inside of the Textarea"
        },
        "tooltipMessage": {
          "type": {
            "name": "string"
          },
          "required": false,
          "description": "Message to be displayed in a Tooltip when the user hovers over the help icon"
        },
        "mb": {
          "type": {
            "name": "enum",
            "value": [
              {
                "value": 0,
                "computed": "false"
              },
              {
                "value": 1,
                "computed": "false"
              },
              {
                "value": 2,
                "computed": "false"
              },
              {
                "value": 3,
                "computed": "false"
              },
              {
                "value": 4,
                "computed": "false"
              },
              {
                "value": 5,
                "computed": "false"
              },
              {
                "value": 7,
                "computed": "false"
              }
            ]
          },
          "required": false,
          "description": "Margin bottom, given number will be multiplied by base spacing unit (8)"
        }
      }
    }
  ],
  "src/__experimental__/components/textarea/textarea.stories.js": [
    {
      "description": "",
      "displayName": "defaultComponent",
      "methods": []
    },
    {
      "description": "",
      "displayName": "autoFocusComponent",
      "methods": []
    }
  ]
}