// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`RadioButtonMapper renders as expected 1`] = `
Array [
  .c3 + .c2 {
  margin-top: 16px;
}

.c5 {
  display: block;
}

.c9 {
  cursor: pointer;
  opacity: 0;
  margin: 0;
  position: relative;
  z-index: 999;
}

.c7 {
  display: inline-block;
  position: relative;
}

.c1 .c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c1 .c15 {
  text-align: left;
  padding-top: 0;
  width: auto;
}

.c1 .c15 .c13,
.c1 .c15 .c14 {
  color: rgba(0,0,0,0.65);
  vertical-align: middle;
  top: -1px;
}

.c1 .c15 .c13:hover,
.c1 .c15 .c14:hover,
.c1 .c15 .c13:focus,
.c1 .c15 .c14:focus {
  color: rgba(0,0,0,0.9);
}

.c1 .c12 {
  -webkit-flex-basis: 100%;
  -ms-flex-preferred-size: 100%;
  flex-basis: 100%;
}

.c0 {
  padding-top: 8px;
  margin-bottom: 12px;
}

.c0 .c6 {
  padding-top: 1px;
}

.c0 .c10 {
  height: 16px;
}

.c0 svg {
  background-color: #FFFFFF;
  border: 1px solid #668491;
}

.c0 .c8,
.c0 svg {
  height: 16px;
  position: absolute;
  padding: 1px;
}

.c0 .c6,
.c0 .c8,
.c0 .c10,
.c0 svg {
  box-sizing: border-box;
  min-width: 16px;
  width: 16px;
}

.c0 .c8:not([disabled]):focus + .c10,
.c0 .c8:not([disabled]):hover + .c10 {
  box-shadow: 0 0 0 3px #FFB500;
}

.c0 .c15 {
  padding-left: 6px;
  width: auto;
  -webkit-flex: 1 1 calc(100% - 28px);
  -ms-flex: 1 1 calc(100% - 28px);
  flex: 1 1 calc(100% - 28px);
}

.c0 .c12 {
  margin-left: 16px;
  margin-top: 0;
  padding-left: 6px;
}

.c0 .c14 {
  position: relative;
  display: inline-block;
}

.c0 .c12 {
  margin-left: 32px;
  padding-left: 0;
}

.c0 .c6 {
  margin-right: 16px;
}

.c0 .c10 {
  padding: 0;
}

.c0 .c10,
.c0 svg {
  border-radius: 50%;
}

.c0 .c6,
.c0 .c8,
.c0 .c10,
.c0 svg {
  height: 16px;
  width: 16px;
}

.c0 svg {
  padding: 1px;
}

.c0 circle {
  r: 5;
}

.c0 .c15 {
  -webkit-flex: 1 1 calc(100% - 44px);
  -ms-flex: 1 1 calc(100% - 44px);
  flex: 1 1 calc(100% - 44px);
  padding-left: 0;
}

.c0 .c8:checked + .c10 circle {
  fill: rgba(0,0,0,0.9);
}

.c11 .c6 {
  padding-top: 1px;
}

.c11 .c10 {
  height: 16px;
}

.c11 .c8,
.c11 svg {
  height: 16px;
  position: absolute;
  padding: 1px;
}

.c11 .c6,
.c11 .c8,
.c11 .c10,
.c11 svg {
  box-sizing: border-box;
  min-width: 16px;
  width: 16px;
}

.c11 .c8:not([disabled]):focus + .c10,
.c11 .c8:not([disabled]):hover + .c10 {
  box-shadow: 0 0 0 3px #FFB500;
}

.c11 .c6 {
  margin-right: 16px;
}

.c11 .c10 {
  padding: 0;
}

.c11 .c10,
.c11 svg {
  border-radius: 50%;
}

.c11 .c6,
.c11 .c8,
.c11 .c10,
.c11 svg {
  height: 16px;
  width: 16px;
}

.c11 .c8:checked + .c10 circle {
  fill: rgba(0,0,0,0.9);
}

<div
    checked={false}
    className="c0"
    data-component="radio-button"
    name="test-group"
  >
    <div
      checked={false}
      className="c1"
      name="test-group"
    >
      <div
        className="c2 c3"
      >
        <div
          className="c4 c5"
        >
          <div
            className="c6 c7"
          >
            <input
              aria-checked={false}
              aria-describedby="rId-0-help"
              aria-labelledby="rId-0-label"
              checked={false}
              className="c8 c9"
              id="rId-0"
              name="test-group"
              onBlur={[MockFunction]}
              onChange={[Function]}
              role="radio"
              type="radio"
              value="test-1"
            />
            <div
              className="c10 "
            >
              <svg
                focusable="false"
                viewBox="0 0 15 15"
              >
                <g
                  fill="none"
                  fillRule="evenodd"
                  stroke="none"
                  strokeWidth="1"
                >
                  <circle
                    className="radio-button-check"
                    cx="7.5"
                    cy="7.5"
                    fill="#FFFFFF"
                    r="5"
                  />
                </g>
              </svg>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>,
  .c3 + .c2 {
  margin-top: 16px;
}

.c5 {
  display: block;
}

.c9 {
  cursor: pointer;
  opacity: 0;
  margin: 0;
  position: relative;
  z-index: 999;
}

.c7 {
  display: inline-block;
  position: relative;
}

.c1 .c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c1 .c15 {
  text-align: left;
  padding-top: 0;
  width: auto;
}

.c1 .c15 .c13,
.c1 .c15 .c14 {
  color: rgba(0,0,0,0.65);
  vertical-align: middle;
  top: -1px;
}

.c1 .c15 .c13:hover,
.c1 .c15 .c14:hover,
.c1 .c15 .c13:focus,
.c1 .c15 .c14:focus {
  color: rgba(0,0,0,0.9);
}

.c1 .c12 {
  -webkit-flex-basis: 100%;
  -ms-flex-preferred-size: 100%;
  flex-basis: 100%;
}

.c0 {
  padding-top: 8px;
  margin-bottom: 12px;
}

.c0 .c6 {
  padding-top: 1px;
}

.c0 .c10 {
  height: 16px;
}

.c0 svg {
  background-color: #FFFFFF;
  border: 1px solid #668491;
}

.c0 .c8,
.c0 svg {
  height: 16px;
  position: absolute;
  padding: 1px;
}

.c0 .c6,
.c0 .c8,
.c0 .c10,
.c0 svg {
  box-sizing: border-box;
  min-width: 16px;
  width: 16px;
}

.c0 .c8:not([disabled]):focus + .c10,
.c0 .c8:not([disabled]):hover + .c10 {
  box-shadow: 0 0 0 3px #FFB500;
}

.c0 .c15 {
  padding-left: 6px;
  width: auto;
  -webkit-flex: 1 1 calc(100% - 28px);
  -ms-flex: 1 1 calc(100% - 28px);
  flex: 1 1 calc(100% - 28px);
}

.c0 .c12 {
  margin-left: 16px;
  margin-top: 0;
  padding-left: 6px;
}

.c0 .c14 {
  position: relative;
  display: inline-block;
}

.c0 .c12 {
  margin-left: 32px;
  padding-left: 0;
}

.c0 .c6 {
  margin-right: 16px;
}

.c0 .c10 {
  padding: 0;
}

.c0 .c10,
.c0 svg {
  border-radius: 50%;
}

.c0 .c6,
.c0 .c8,
.c0 .c10,
.c0 svg {
  height: 16px;
  width: 16px;
}

.c0 svg {
  padding: 1px;
}

.c0 circle {
  r: 5;
}

.c0 .c15 {
  -webkit-flex: 1 1 calc(100% - 44px);
  -ms-flex: 1 1 calc(100% - 44px);
  flex: 1 1 calc(100% - 44px);
  padding-left: 0;
}

.c0 .c8:checked + .c10 circle {
  fill: rgba(0,0,0,0.9);
}

.c11 .c6 {
  padding-top: 1px;
}

.c11 .c10 {
  height: 16px;
}

.c11 .c8,
.c11 svg {
  height: 16px;
  position: absolute;
  padding: 1px;
}

.c11 .c6,
.c11 .c8,
.c11 .c10,
.c11 svg {
  box-sizing: border-box;
  min-width: 16px;
  width: 16px;
}

.c11 .c8:not([disabled]):focus + .c10,
.c11 .c8:not([disabled]):hover + .c10 {
  box-shadow: 0 0 0 3px #FFB500;
}

.c11 .c6 {
  margin-right: 16px;
}

.c11 .c10 {
  padding: 0;
}

.c11 .c10,
.c11 svg {
  border-radius: 50%;
}

.c11 .c6,
.c11 .c8,
.c11 .c10,
.c11 svg {
  height: 16px;
  width: 16px;
}

.c11 .c8:checked + .c10 circle {
  fill: rgba(0,0,0,0.9);
}

<div
    checked={false}
    className="c0"
    data-component="radio-button"
    name="test-group"
  >
    <div
      checked={false}
      className="c1"
      name="test-group"
    >
      <div
        className="c2 c3"
      >
        <div
          className="c4 c5"
        >
          <div
            className="c6 c7"
          >
            <input
              aria-checked={false}
              aria-describedby="rId-1-help"
              aria-labelledby="rId-1-label"
              checked={false}
              className="c8 c9"
              id="rId-1"
              name="test-group"
              onBlur={[MockFunction]}
              onChange={[Function]}
              role="radio"
              type="radio"
              value="test-2"
            />
            <div
              className="c10 "
            >
              <svg
                focusable="false"
                viewBox="0 0 15 15"
              >
                <g
                  fill="none"
                  fillRule="evenodd"
                  stroke="none"
                  strokeWidth="1"
                >
                  <circle
                    className="radio-button-check"
                    cx="7.5"
                    cy="7.5"
                    fill="#FFFFFF"
                    r="5"
                  />
                </g>
              </svg>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>,
]
`;
