{
  "src/__experimental__/components/textbox/textbox.component.js": [
    {
      "description": "",
      "displayName": "Textbox",
      "methods": [],
      "props": {
        "formattedValue": {
          "type": {
            "name": "string"
          },
          "required": false,
          "description": "An optional alternative for props.value, this is useful if the\nreal value is an ID but you want to show a human-readable version."
        },
        "value": {
          "type": {
            "name": "union",
            "value": [
              {
                "name": "string"
              },
              {
                "name": "object"
              },
              {
                "name": "array"
              }
            ]
          },
          "required": false,
          "description": "The value of the Textbox"
        },
        "rawValue": {
          "type": {
            "name": "string"
          },
          "required": false,
          "description": "The unformatted value"
        },
        "disabled": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "description": "If true, the component will be disabled"
        },
        "readOnly": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "description": "If true, the component will be read-only"
        },
        "onChange": {
          "type": {
            "name": "func"
          },
          "required": false,
          "description": "Event handler for the change event"
        },
        "onKeyDown": {
          "type": {
            "name": "func"
          },
          "required": false,
          "description": "Event handler for the keyDown event"
        },
        "onChangeDeferred": {
          "type": {
            "name": "func"
          },
          "required": false,
          "description": "Defered callback called after the onChange event"
        },
        "deferTimeout": {
          "type": {
            "name": "number"
          },
          "required": false,
          "description": "Integer to determine timeout for defered callback"
        },
        "label": {
          "type": {
            "name": "string"
          },
          "required": false,
          "description": "Label"
        },
        "labelHelp": {
          "type": {
            "name": "string"
          },
          "required": false,
          "description": "Text applied to label help tooltip"
        },
        "labelInline": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "description": "When true, label is placed in line an input"
        },
        "labelSpacing": {
          "type": {
            "name": "enum",
            "value": [
              {
                "value": 1,
                "computed": "false"
              },
              {
                "value": 2,
                "computed": "false"
              }
            ]
          },
          "required": false,
          "description": "Spacing between label and a field for inline label, given number will be multiplied by base spacing unit (8)"
        },
        "labelWidth": {
          "type": {
            "name": "number"
          },
          "required": false,
          "description": "Width of a label in percentage. Works only when labelInline is true",
          "defaultValue": {
            "value": "30",
            "computed": false
          }
        },
        "inputWidth": {
          "type": {
            "name": "number"
          },
          "required": false,
          "description": "Width of an input in percentage. Works only when labelInline is true",
          "defaultValue": {
            "value": "70",
            "computed": false
          }
        },
        "fieldHelp": {
          "type": {
            "name": "node"
          },
          "required": false,
          "description": "Help content to be displayed under an input"
        },
        "children": {
          "type": {
            "name": "node"
          },
          "required": false,
          "description": "Type of the icon that will be rendered next to the input"
        },
        "inputIcon": {
          "type": {
            "name": "string"
          },
          "required": false,
          "description": "Icon to display inside of the Textbox"
        },
        "leftChildren": {
          "type": {
            "name": "node"
          },
          "required": false,
          "description": "Additional child elements to display before the input"
        },
        "childOfForm": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "description": "Flag to configure component when in a Form"
        },
        "isOptional": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "description": "Flag to configure component as optional in Form"
        },
        "error": {
          "type": {
            "name": "union",
            "value": [
              {
                "name": "bool"
              },
              {
                "name": "string"
              }
            ]
          },
          "required": false,
          "description": "Indicate that error has occurred\n  Pass string to display icon, tooltip and red border\n  Pass true boolean to only display red border"
        },
        "warning": {
          "type": {
            "name": "union",
            "value": [
              {
                "name": "bool"
              },
              {
                "name": "string"
              }
            ]
          },
          "required": false,
          "description": "Indicate that warning has occurred\n  Pass string to display icon, tooltip and orange border\n  Pass true boolean to only display orange border"
        },
        "info": {
          "type": {
            "name": "union",
            "value": [
              {
                "name": "bool"
              },
              {
                "name": "string"
              }
            ]
          },
          "required": false,
          "description": "Indicate additional information\n  Pass string to display icon, tooltip and blue border\n  Pass true boolean to only display blue border"
        },
        "validationOnLabel": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "description": "When true, validation icon will be placed on label instead of being placed on the input",
          "defaultValue": {
            "value": "false",
            "computed": false
          }
        },
        "size": {
          "type": {
            "name": "enum",
            "computed": true,
            "value": "OptionsHelper.sizesRestricted"
          },
          "required": false,
          "description": "Size of an input",
          "defaultValue": {
            "value": "'medium'",
            "computed": false
          }
        },
        "placeholder": {
          "type": {
            "name": "string"
          },
          "required": false,
          "description": "Placeholder string to be displayed in input"
        },
        "iconOnClick": {
          "type": {
            "name": "func"
          },
          "required": false,
          "description": "Optional handler for click event on Textbox icon"
        },
        "onClick": {
          "type": {
            "name": "func"
          },
          "required": false,
          "description": "Handler for onClick events"
        },
        "mb": {
          "type": {
            "name": "enum",
            "value": [
              {
                "value": 0,
                "computed": "false"
              },
              {
                "value": 1,
                "computed": "false"
              },
              {
                "value": 2,
                "computed": "false"
              },
              {
                "value": 3,
                "computed": "false"
              },
              {
                "value": 4,
                "computed": "false"
              },
              {
                "value": 5,
                "computed": "false"
              },
              {
                "value": 7,
                "computed": "false"
              }
            ]
          },
          "required": false,
          "description": "Margin bottom, given number will be multiplied by base spacing unit (8)"
        },
        "adaptiveLabelBreakpoint": {
          "type": {
            "name": "number"
          },
          "required": false,
          "description": "Breakpoint for adaptive label (inline labels change to top aligned). Enables the adaptive behaviour when set"
        },
        "styleOverride": {
          "type": {
            "name": "shape",
            "value": {
              "root": {
                "name": "union",
                "value": [
                  {
                    "name": "func"
                  },
                  {
                    "name": "object"
                  }
                ],
                "required": false
              },
              "input": {
                "name": "union",
                "value": [
                  {
                    "name": "func"
                  },
                  {
                    "name": "object"
                  }
                ],
                "required": false
              },
              "label": {
                "name": "union",
                "value": [
                  {
                    "name": "func"
                  },
                  {
                    "name": "object"
                  }
                ],
                "required": false
              }
            }
          },
          "required": false,
          "description": "Allows to override existing component styles",
          "defaultValue": {
            "value": "{}",
            "computed": false
          }
        }
      }
    }
  ],
  "src/__experimental__/components/textbox/textbox.stories.js": [
    {
      "description": "",
      "displayName": "defaultTextbox",
      "methods": []
    },
    {
      "description": "",
      "displayName": "autoFocusTextbox",
      "methods": []
    },
    {
      "description": "",
      "displayName": "multipleTextbox",
      "methods": []
    },
    {
      "description": "",
      "displayName": "multipleTextboxAutoFocus",
      "methods": []
    }
  ]
}