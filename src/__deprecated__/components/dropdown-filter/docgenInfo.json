{
  "src/components/dropdown-filter/dropdown-filter.js": [
    {
      "description": "",
      "displayName": "DropdownFilter",
      "methods": [],
      "props": {
        "autoFocus": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "description": "Automatically focus the input."
        },
        "cacheVisibleValue": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "description": "Determines if the visibleValue will be cached or not."
        },
        "disabled": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "description": "Disable all user interaction."
        },
        "onBlur": {
          "type": {
            "name": "func"
          },
          "required": false,
          "description": "A custom onBlur handler."
        },
        "options": {
          "type": {
            "name": "object"
          },
          "required": true,
          "description": "The options to be displayed in the dropdown. Should be set in the store and passed from the parent component.\n\nThis should be an Immutable object."
        },
        "name": {
          "type": {
            "name": "string"
          },
          "required": false,
          "description": "Set the name of the corresponding hidden input."
        },
        "readOnly": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "description": "Display the currently selected value without displaying the dropdown."
        },
        "value": {
          "type": {
            "name": "union",
            "value": [
              {
                "name": "string"
              },
              {
                "name": "number"
              }
            ]
          },
          "required": false,
          "description": "The ID value for the component"
        },
        "renderItem": {
          "type": {
            "name": "func"
          },
          "required": false,
          "description": "An optional function to be passed that will render each of the dropdown's items."
        },
        "visibleValue": {
          "type": {
            "name": "string"
          },
          "required": false,
          "description": "The visible value for the component\nProvides a visible value in `freetext` mode when no option is selected."
        },
        "create": {
          "type": {
            "name": "func"
          },
          "required": false,
          "description": "Enables create functionality for dropdown."
        },
        "createText": {
          "type": {
            "name": "string"
          },
          "required": false,
          "description": "Customizes text for the create functionality of the dropdown."
        },
        "createIconType": {
          "type": {
            "name": "string"
          },
          "required": false,
          "description": "Customizes the Carbon Icon type for the create functionality of the dropdown."
        },
        "suggest": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "description": "Should the dropdown act and look like a suggestable input instead."
        },
        "freetext": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "description": "Should the dropdown accept free text as well as suggested options?"
        },
        "freetextName": {
          "type": {
            "name": "string"
          },
          "required": false,
          "description": "Name for freetext value hidden input containing visibleValue in freetext mode"
        },
        "deferTimeout": {
          "type": {
            "name": "number"
          },
          "required": false,
          "description": "Integer to determine timeout for defered callback. Default: 750"
        },
        "onChangeDeferred": {
          "type": {
            "name": "func"
          },
          "required": false,
          "description": "Defered callback called after onChange event"
        },
        "label": {
          "type": {
            "name": "node"
          },
          "required": false,
          "description": "Either a string or false to turn the label off"
        },
        "labelInline": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "description": "Pass true to format the input/label inline"
        },
        "labelWidth": {
          "type": {
            "name": "union",
            "value": [
              {
                "name": "string"
              },
              {
                "name": "number"
              }
            ]
          },
          "required": false,
          "description": "Pass a percentage to define the width of the label when it\n is displayed inline."
        },
        "labelAlign": {
          "type": {
            "name": "string"
          },
          "required": false,
          "description": "Aligns label content to the right if set"
        },
        "labelHelp": {
          "type": {
            "name": "string"
          },
          "required": false,
          "description": "Text applied to tooptip of help icon"
        },
        "inputWidth": {
          "type": {
            "name": "union",
            "value": [
              {
                "name": "string"
              },
              {
                "name": "number"
              }
            ]
          },
          "required": false,
          "description": "Pass a percentage to define the width of the label when it\n is displayed inline"
        },
        "fieldHelp": {
          "type": {
            "name": "node"
          },
          "required": false,
          "description": "A string representing a help message"
        },
        "fieldHelpInline": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "description": "Boolean to determine whether the help message should be inline"
        },
        "validations": {
          "type": {
            "name": "array"
          },
          "required": false,
          "description": "Array of validations to apply to this input"
        },
        "warnings": {
          "type": {
            "name": "array"
          },
          "required": false,
          "description": "Array of warnings to apply to this input"
        },
        "info": {
          "type": {
            "name": "array"
          },
          "required": false,
          "description": "Array of info to apply to this input"
        },
        "timeToDisappear": {
          "type": {
            "name": "number"
          },
          "required": false,
          "description": "Number which sets timing of when the message will disappear\nExpected time is set in miliseconds"
        }
      }
    }
  ]
}