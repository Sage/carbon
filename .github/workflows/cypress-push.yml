name: Cypress Push

on:
  push:
    branches:    
      - trigger-integration # This is the branch that we use to test PR's from forks

jobs:
  cypress:
    runs-on: ubuntu-18.04
    timeout-minutes: 12
    strategy:
      # when one test fails, DO NOT cancel the other
      # containers, because this will kill Cypress processes
      # leaving the Dashboard hanging ...
      # https://github.com/cypress-io/github-action/issues/48
      fail-fast: false
      matrix:
        # run 20 copies of the current job in parallel
        containers: [
            1, 2, 3, 4, 5, 
            6, 7, 8, 9, 10, 
            11, 12, 13, 14, 15, 
            16, 17, 18, 19
            ]
    container: cypress/browsers:node14.7.0-chrome84
    steps:
      - name: Checkout
        uses: actions/checkout@v2.2.0
      # Restore the previous NPM modules and Cypress binary archives.
      # Any updated archives will be saved automatically after the entire
      # workflow successfully finishes.
      # See https://github.com/actions/cache
      - name: Cache central NPM modules
        uses: actions/cache@v2.0.0
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Cache Cypress binary
        uses: actions/cache@v2.0.0
        with:
          path: ~/.cache/Cypress
          key: cypress-${{ runner.os }}-cypress-${{ hashFiles('**/package.json') }}
          restore-keys: |
            cypress-${{ runner.os }}-cypress-
      - name: install dependencies and verify Cypress
        env:
          # make sure every Cypress install prints minimal information
          CI: 1
        run: |
          npm ci
          npx cypress cache path
          npx cypress cache list
          npx cypress verify
          npx cypress info
      # because of "record" and "parallel" parameters
      # these containers will load balance all found tests among themselves
      - name: Cypress run
        uses: cypress-io/github-action@v2.2.6
        with:
          install: false
          start: npm start
          # quote the url to be safe against YML parsing surprises
          wait-on: 'http://localhost:9001'
          wait-on-timeout: 150
          record: true
          parallel: true
          group: ubuntu-regression
          quiet: true
          browser: chrome
        env:
          # pass the Dashboard record key as an environment variable
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          CI: 'true'
          # Recommended: pass the GitHub token lets this action correctly
          # determine the unique run id necessary to re-run the checks
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}