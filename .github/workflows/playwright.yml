name: Playwright

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  playwright-tests:
    name: "Run Playwright tests"
    timeout-minutes: 30
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/playwright:v1.49.1-noble
    strategy:
      fail-fast: false
      matrix:
        shardIndex: [1, 2, 3, 4, 5, 6, 7, 8]
        shardTotal: [8]
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: ">=22.14.0 22"

      - name: Cache central NPM modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install jq
        run: |
          apt update
          apt install -y jq

      - name: Install dependencies
        run: |
          npm ci
          npx playwright --version

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Run Playwright tests
        run: |
          npm run test:ct -- --shard=${{ matrix.shardIndex }}/${{ matrix.shardTotal }} --reporter=json > test-results.json 2>test-errors.log || true

      - name: Process test results for annotations
        if: always() # Run even if the test step fails
        run: |
          echo "Checking test results file content:"
          head -20 test-results.json

          echo "Validating JSON format:"
          if jq empty test-results.json 2>/dev/null; then
            echo "JSON is valid, processing annotations..."
            # Extract tests that need review and create GitHub annotations
            jq -r '.suites[].specs[] | select(.status == "expected" and .annotations.needsReview == true) |
              "::warning file=\(.file),line=\(.line),title=Test Needs Review::\(.title) - This test passed but is flagged for review."' \
              test-results.json || echo "No tests needing review found"

            # Extract incomplete tests and create GitHub annotations
            jq -r '.suites[].specs[] | select(.status == "incomplete") |
              "::warning file=\(.file),line=\(.line),title=Incomplete Test::\(.title) - This test is incomplete and needs attention."' \
              test-results.json || echo "No incomplete tests found"
          else
            echo "Invalid JSON format detected. Examining the file:"
            echo "File size: $(wc -c < test-results.json) bytes"
            echo "First 50 characters:"
            head -c 50 test-results.json | cat -A
            echo "This could be due to error output mixing with JSON or Playwright output format differences."

            # Try to fix common issues - extract just the JSON part if possible
            echo "Attempting to extract valid JSON..."
            grep -o '{.*}' test-results.json > fixed-results.json || true
            if [ -s fixed-results.json ] && jq empty fixed-results.json 2>/dev/null; then
              echo "Successfully extracted valid JSON!"
              mv fixed-results.json test-results.json
              # Process the fixed JSON (repeat the processing code)
              jq -r '.suites[].specs[] | select(.status == "expected" and .annotations.needsReview == true) |
                "::warning file=\(.file),line=\(.line),title=Test Needs Review::\(.title) - This test passed but is flagged for review."' \
                test-results.json || echo "No tests needing review found"
              jq -r '.suites[].specs[] | select(.status == "incomplete") |
                "::warning file=\(.file),line=\(.line),title=Incomplete Test::\(.title) - This test is incomplete and needs attention."' \
                test-results.json || echo "No incomplete tests found"
            else
              echo "Could not extract valid JSON. Consider adjusting your Playwright reporter configuration."
            fi
          fi

      - name: Upload blob report to Artifacts
        if: ${{ !cancelled() }}
        uses: actions/upload-artifact@v4
        with:
          name: blob-report-${{ matrix.shardIndex }}
          path: blob-report
          retention-days: 1

  merge-reports:
    name: "Merge reports from all shards"
    if: ${{ !cancelled() }}
    needs: [playwright-tests]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ">=22.14.0 22"
      - name: Install dependencies
        run: npm ci

      - name: Download blob reports from GitHub Actions Artifacts
        uses: actions/download-artifact@v4
        with:
          path: all-blob-reports
          pattern: blob-report-*
          merge-multiple: true

      - name: Merge into HTML Report
        run: npx playwright merge-reports --config=playwright-ct.config.ts --reporter=html ./all-blob-reports

      - name: Upload HTML report
        uses: actions/upload-artifact@v4
        with:
          name: html-report--attempt-${{ github.run_attempt }}
          path: playwright-report
          retention-days: 14
